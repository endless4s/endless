@startuml
'https://plantuml.com/sequence-diagram
title Server side of ""bookingAlg.place(booking)""
skinparam handwritten true
skinparam defaultFontName Chalkboard

actor Ask as Ask
actor Entity as Entity
participant IncomingCommand as IncomingCommand
participant BookingEntity as BookingEntity
participant Repository as Repository
participant EntityT as EntityT
participant "Akka Effect DSL" as Effect
autonumber
autoactivate on


Ask o->o Entity: Command

Entity -> Repository: handleCommand(state, protocol.server.decode(command.payload))
Repository -> IncomingCommand: runWith(bookingEntity)
IncomingCommand -> BookingEntity: place(booking)
return F[AlreadyExists.type \/ Unit]
return EntityT[F, BookingState, BookingEvent, command.Reply]
Repository -> EntityT: run(state)
return (events, reply)
return (events, reply)
Entity -> Effect: persist(events)
return effect
Entity -> IncomingCommand: encode(reply)
return Array[Byte]
Entity -> Effect: thenReply(command.replyTo, Reply(payload))
return replyEffect
return Reply(replyPayload)
@enduml